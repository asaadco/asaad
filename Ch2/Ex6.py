#  2.7 Randomized Motif Search
import random as rnd
from Ex5 import constructProfile, profileMostProbable, score
from Ex4 import listToString

def RandomizedMotifSearch(Dna, k, t):
    '''
    :param Dna: collection of strings
    :param k: k-mer length
    :param t: length of DNA
    :return: t x k array of best motifs
    '''
    motifs = []
    for seq in Dna.split("\n"):
        rndIndex = rnd.randrange(0, len(seq)-k)
        motifs.append(seq[rndIndex:rndIndex+k])
    bestMotif = motifs
    while True:
        profile = constructProfile(motifs, k, t)
        motifs = Motifs(Dna, k, profile)
        if score(motifs) < score(bestMotif):
            bestMotif = motifs
        else:
            return bestMotif

def Motifs(Dna, k, profile):
    motifs = []
    for seq in Dna.split("\n"):
        motifs.append(profileMostProbable(seq, k, profile))
    return motifs

def iteration_RMS(Dna, k, t, iter):
    bestMotifs =  RandomizedMotifSearch(Dna, k, t)
    for i in range(0, iter-1):
        motifs = RandomizedMotifSearch(Dna, k, t)
        if score(motifs) < score(bestMotifs):
            bestMotifs = motifs
    return bestMotifs

if __name__ == "__main__":
    bestMotifs = iteration_RMS("AGTCAACCCGGATCGCGGGTCGGTATGGCCACAGCACTCCGCGAACAGTCGGATAGGCAAGCACGGGGATCCGAACGCTCCAAGCGGCCATAAATTAGTTTCTTCTGGGTGCCATTAGAACTAGCCATCCTGCTAACCGCTCGGCGTAATGTGCACACTGCCTAAATTGCTTTAACGCATCCTATAAGTCAACCCGGATCG\nCGGGTCGGTATGGCCACAGCACTCCGCGAACAGTCGGATAGGCAAGCACGGGGATCCGAACGCTCCAAGCGGCCATATCGCTCCGGACCTCCAATTAGTTTCTTCTGGGTGCCATTAGAACTAGCCATCCTGCTAACCGCTCGGCGTAATGTGCACACTGCCTAAATTGCTTTAACGCATCCTATAAGTCAACCCGGATCG\nTGCGGGACTTGTAGATGGAATGCAGTTCTTGAGAGGTCCGTGCCTGGTTTTATCATTCCCGGGGAGCCCGATTGGGTGCCTGAGGCTTTCGGACTACAGGTTCCCCATAAACCACGAACCAATAGTAGCAGAAGCCAATAGCATCGAACTGGGCCCCCTTGCGAACGGACCTCCGCACGGGTGAGTATACTTCGGATACCC\nCGATATTGACACTGGTGACTCCCGCACCCTCATCGAGCGACCCCTGGGTTGCAGACATTAAGTTCTTGTTACACGTCATATTCATTTGGCTAAGGCTGCGGTAGTAAGCTACCCGGGACGATCTCAAAATCGAAAGTAACCTCCTTAGGGAAAACCTACTCACTCACCCACGGCCGTTCATCACTTTCGGACCATTCAGGT\nACTGTAGGCTTTTCAGGTTAAGACCACTACCCTTGGAAGCGCCAGGTGGGACCACCAATGAGATGATACATATGGGGCAGTTCTCTGGATGATTACACGCCACTCAGTCTAGCTTGTTTGCGCCAGTGAAAATTTGTCAACAAAGACGGCGATTGTAGGTCGAAACGGTAGTCCACTCGTGTTTCCATAAATGCCCTCGAA\nCATAGTTAGATCCACGTGCTGTTCCTAATAGAGACTTTACGCAATGCCGTATGGCTCTCTACGATGGGCTCAGGGGCATAGTTAAGTTACAAGTCAATTGAGATAGACTGGCGCAGACTTTGTGTCGAAACCTTCCTCCACTACGATGTTACCAACAGGGTTAGTGCAAGCATCCATCCATTATTTCACTCTGGCGGACTA\nAATGGCATGGTCCGCAGCCAAATATCGAGACACGAGTTGATACACCGTTCGATTAGCAACTCGAAAGTTACCTCCCTAGAGCGGCGTCGTCGGTTGATGTCATCTTTTCTCTGATCGCATTAATCTCGTGTAAAAAAATTAATGCATACTGAGGCACAGCTTCTTACAATCATGTGAGGTACTTCCGCCTGAATTCTGATG\nGCCTGTTGATAGGTCGGCTTTGTGTTGCCACTGCACAAGGAGGTAGCGTAGAGTGGCGTCACTTTCCAACTCGCGCTTTCAATGACCCCAACGTGCTGCAGATATGTGTAGAGTGAAATTACATAACGCCTTGCTATCCGTCCGTATAATTCCCAGTGGTTCGAAACGCTGCTCCAGGGATTAGGTGGCTAGCGAGGGCTT\nAAAGCTCTAAGATGTTCGCATGCGCAACGTGTAATTCAGGTACGCACGTCGAAACGGACCAAGTGACGATGGTTCACAACCGTTTGCCTAAGCGCGAGCAGTAACGTAAGCAAGTAGCGTGAACCAAGAGCATACCCTGTCTCTGGTTGAGACTATCGGCTTTGATAGAGCGTCTACAGTGCCACTCGTACATGTTCTCGA\nCAATAGCACTCGTTTTCCGATCGACCAGGACCTCCCCTTACCAGGCGGACTGTAATGAGCTGAACGGTTAAAAGGTCCAGTAGTAGCGTCGTGTCAATACCGGTCTTCTGACATCGGGGGAGGCCTGCGGAACAAAAAAAACAATATTATTTTGAATCGGGATCAGGGCACACACGAAATCATAGACACTACGTCTCGGCT\nGGTAGCATGCAAGACGGGGTCACCGTATGCAAGACAACTCACGTTAATAAAGGTCGAGCCAGCGGTTATAGGACACGAATTGAAGGTTTGTATAGACGGGCAAGCCTCATCCGTTGCCCATTGAGTCCCCTCGGGTCGACGAGGACCTCCTACACTGGATTTTTACCCAAGCCAAGACGAAAAACCTAGGCAAGTAACATT\nAGTTTTTGTATGCCTTTATTTGGGGGCGCAAAGGTTTGGATTTTAACTCAGGCGAGCTACGCCTACCGAAATTAAGCACCTGGTTAACGACGGGAAGAATATCTCACCTACAACTGACAAAGACCAGGCGCCACGTTCAGGTGACACGATTGGTAGGCGGTTCCTACCTTCCGATCGAAACGGACACACGATGTCTTGACA\nCCAGGCTGCTCCCAGTTATCGAGGCATCCTTGTGACTAGCGCCTCGAACGAGACCTCCTACCTATTGCTATATAAATCCAGCGTCGGATCTCACCCGAGACTCATCCCGTGCCTTCCCAGCCCTTGTTGGTCTAGTGCAGCTTAATTCTGTCGATAAAAGGGATGCTAGGTAAGTCATTCACGAATTTTCGTGTGTAGTAT\nACCTTGTAATATCTAATCGGCAGCTTCTCCAATACCATCGTCTCGGACCTCCAGTCGCTCGCTGCGTACGTACTCGTGTTCACACAGGGCGAACGCTGGCGGGCCGGGACGCTTCAGGGAGAGCGTTAGGCCATCAGCGTGACTCGGACGGTGACTATTGGATCTCACCCCCACTCAGGCGTCTCGGCACCCTCATAACCC\nCACTATCCTACCGTATCGGGCTCGAATATGCGCCATCCGAAGGGAGCGATTCAATAGGGACGGCCGGGTCGGCGCGCATATCTTGACTGCACGAAAATGAAACGGACCTCATATTCATGATCCACTGACTAGTAAATAGCTGCGAGGGCAGTTGTGGCAGGTCTTACAGGGTAAACGTTAACGAACTCCACTTTTCGTGGG\nTCACGCCCCTCGACGAAGTCGAAACGGAGACCCGTCCCACGCACATAGGAAGCCAGCGTCATCTGGCTTATGGGGCCGTAGGCTGGATGGTAGGCTCGACGTAGAGTGTCTCAATACAAGCTATTGGGCGCAGATTGATAAACCGCCCGCTTTTCAGACGTTAGTTACCTTCTGTGTGAGGATTGCAACATTACTTGCTAA\nACCCATCGCAGACCGAACTGGGGTTCTAGTACACGACGCCCACGCGATTTGTAGCGCACTTATTGGACTTGAGCCACTCAGCTCCCAGTCCATTCATATTTGTTACAATACGTCCCGTACCAGTGGAACCCCGTTTCCCCGACGGGCGTGCCCGGAGCATCTCGTAGAGGAAAAACGGACCTCCTGAAGGCGATTCGCCTG\nCTATATCCCTGGGTGCTTCACTCAGTCGAATGTGACCTCCAAGTAAAGAACCGGGATTACTTACCAACCTTAGCCGATAGCGATACTATAACGCTCCACCATCCTGACTGGCAACGCACCATTCCTCTTGCAACATGACGACCTGCCTTATTGGCCGATATTTAAGTCAAGAGACTCTGGTAAGTGCAGACGGTGTAAAAC\nGCTACGCCCGGGTGAGGAACGGGGTCCTCCACAGTTAACTATATTGCCAAATTCTTGGAGAAAGTCATAAACTTAAAATATCCATTGCAATACGAAGACCGTGGGGATGAACGCCGCGGGCTGTCTCTGTGTGGTGCTAAAACTCCCGGTGTAACCGATGCATGTTCTTTATCAGCACGGACCTCCCCATGATGCGCTCGC\nGGACATGATGGACTCAAGAGACTTCAGACGCCCTGGCCCCCGACTGCTTTTCTCGCCCGTGCGTAGCCCGCCGAAACGGACCTAAATAACCCCTTGACATACCAATGTACGATCTCGTCAATGTCCTTTTTACCCAACCCGATCAACAAGTCAGGGTCGAGCTACCGCCTGAAGTTGGCCACACACCGCAACCCAGACCGG", 15, 20, 1000)
    print(listToString(bestMotifs).replace(" ", "\n"))
    print(score(bestMotifs))